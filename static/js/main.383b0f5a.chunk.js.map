{"version":3,"sources":["bg.jpg","components/Root/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","formField","margin","formFieldSmall","width","paper","backgroundColor","borderRadius","border","palette","primary","main","checkSatusModification","status","value","Number","console","log","Math","floor","Root","props","classes","useState","name","player","race","origin","class","lvl","str","mod","fin","con","int","wis","cha","hpMax","mpMax","hp","mp","attacks","armorOther","shieldBonuses","armorBonuses","armor","pen","shield","anotherFeatures","skills","gold","user","setUser","equip","setEquip","bag","setBag","talent","setTalent","other","training","hasIt","expertises","setExpertises","weapons","setWeapons","type","damage","range","bonuses","weapon","setWeapon","talents","setTalents","useEffect","localStorage","getItem","JSON","parse","handleUserChange","e","target","handleUserStatusChange","className","background","Grid","style","paddingTop","container","spacing","item","lg","sm","Button","variant","color","Paper","TextField","onChange","label","Typography","display","List","map","el","index","ListItem","key","ListItemText","secondary","crit","ListItemSecondaryAction","onClick","filter","ind","padding","xs","marginRight","fullWidth","maxHeight","overflowY","Checkbox","checked","newExpertises","marginLeft","justify","multiline","rows","placeholder","position","top","right","setItem","stringify","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","memo","minHeight","backgroundImage","bg","backgroundSize","backgroundAttachment","backgroundPosition","height","Container","maxWidth","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.383b0f5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.62fc4031.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, Paper, Button, ListItem, ListItemText, List, Typography, ListItemSecondaryAction, Checkbox } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formField: {\r\n    margin: '10px',\r\n  },\r\n  formFieldSmall: {\r\n    margin: '10px',\r\n    width: '80px',\r\n  },\r\n  paper: {\r\n    backgroundColor: '#e0d1bb',\r\n    borderRadius: '10px',\r\n    border: '3px solid ' + theme.palette.primary.main,\r\n  },\r\n}))\r\n\r\nconst checkSatusModification = (status) => {\r\n  let value = Number(status)\r\n  if (value === 0 || value === 1) {\r\n    console.log('Hey')\r\n    return -5\r\n  }\r\n  if (value === 10 || value === 11) {\r\n    return 0\r\n  }\r\n  if (value > 25) {\r\n    return 7 + Math.floor((value - 25) / 2)\r\n  }\r\n  if (value < 10) {\r\n    return Math.floor(value / 2) - 5\r\n  } else {\r\n    return Math.floor((value - 10) / 2)\r\n  }\r\n}\r\n\r\nexport default function Root(props) {\r\n  const classes = useStyles()\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    player: '',\r\n    race: '',\r\n    origin: '',\r\n    class: '',\r\n    lvl: 1,\r\n    status: {\r\n      str: { value: 10, mod: 0 },\r\n      fin: { value: 10, mod: 0 },\r\n      con: { value: 10, mod: 0 },\r\n      int: { value: 10, mod: 0 },\r\n      wis: { value: 10, mod: 0 },\r\n      cha: { value: 10, mod: 0 },\r\n    },\r\n    hpMax: 100,\r\n    mpMax: 100,\r\n    hp: 100,\r\n    mp: 100,\r\n    attacks: [],\r\n    armorOther: 0,\r\n    shieldBonuses: 0,\r\n    armorBonuses: 0,\r\n    armor: {\r\n      name: '',\r\n      pen: 0,\r\n    },\r\n    shield: {\r\n      name: '',\r\n      pen: 0,\r\n    },\r\n    anotherFeatures: '',\r\n    skills: [],\r\n    gold: 0,\r\n  })\r\n  const [equip, setEquip] = useState({})\r\n  const [bag, setBag] = useState([])\r\n  const [talent, setTalent] = useState('')\r\n  const [expertises, setExpertises] = useState([\r\n    { name: 'Acrobacia+', status: 'fin', other: 0, training: 0, hasIt: true },\r\n    { name: 'Adestramento', status: 'cha', other: 0, training: 0, hasIt: true },\r\n    { name: 'Atletismo', status: 'str', other: 0, training: 0, hasIt: true },\r\n    { name: 'Atuação', status: 'cha', training: 0, other: 0, hasIt: true },\r\n    { name: 'Cavalgar', status: 'fin', other: 0, training: 0, hasIt: true },\r\n    { name: 'Conhecimento*', status: 'int', other: 0, training: 0, hasIt: true },\r\n    { name: 'Cura', status: 'wis', other: 0, training: 0, hasIt: true },\r\n    { name: 'Diplomacia', status: 'cha', other: 0, training: 0, hasIt: true },\r\n    { name: 'Enganação', status: 'cha', other: 0, training: 0, hasIt: true },\r\n    { name: 'Fortitude', status: 'con', other: 0, training: 0, hasIt: true },\r\n    { name: 'Furtividade+', status: 'fin', other: 0, training: 0, hasIt: true },\r\n    { name: 'Guerra', training: 0, other: 0, status: 'int', hasIt: true },\r\n    { name: 'Iniciativa', status: 'fin', other: 0, training: 0, hasIt: true },\r\n    { name: 'Intimidação', status: 'cha', other: 0, training: 0, hasIt: true },\r\n    { name: 'Intuição', status: 'wis', other: 0, training: 0, hasIt: true },\r\n    { name: 'Investigação', status: 'int', other: 0, training: 0, hasIt: true },\r\n    { name: 'Jogatina', status: 'cha', other: 0, training: 0, hasIt: true },\r\n    { name: 'Ladinagem*+', status: 'fin', other: 0, training: 0, hasIt: true },\r\n    { name: 'Luta', status: 'str', other: 0, training: 0, hasIt: true },\r\n    { name: 'Misticismo*', status: 'int', other: 0, training: 0, hasIt: true },\r\n    { name: 'Navegação*', status: 'wis', other: 0, training: 0, hasIt: true },\r\n    { name: 'Nobreza*', status: 'int', other: 0, training: 0, hasIt: true },\r\n    { name: 'Percepção', status: 'wis', other: 0, training: 0, hasIt: true },\r\n    { name: 'Pontaria', status: 'fin', other: 0, training: 0, hasIt: true },\r\n    { name: 'Reflexos', status: 'fin', other: 0, training: 0, hasIt: true },\r\n    { name: 'Religião', status: 'wis', other: 0, training: 0, hasIt: true },\r\n    { name: 'Sobrevicência', status: 'wis', other: 0, training: 0, hasIt: true },\r\n    { name: 'Vontade', status: 'wis', other: 0, training: 0, hasIt: true },\r\n  ])\r\n  const [weapons, setWeapons] = useState([])\r\n  const [weapon, setWeapon] = useState({ name: '', type: '', damage: 0, range: '', bonuses: 0 })\r\n  const [talents, setTalents] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('user')) {\r\n      setUser(JSON.parse(localStorage.getItem('user')))\r\n    }\r\n    if (localStorage.getItem('bag')) {\r\n      setBag(JSON.parse(localStorage.getItem('bag')))\r\n    }\r\n    if (localStorage.getItem('weapons')) {\r\n      setWeapons(JSON.parse(localStorage.getItem('weapons')))\r\n    }\r\n    if (localStorage.getItem('expertises')) {\r\n      setExpertises(JSON.parse(localStorage.getItem('expertises')))\r\n    }\r\n    if (localStorage.getItem('talents')) {\r\n      setTalents(JSON.parse(localStorage.getItem('talents')))\r\n    }\r\n  }, [])\r\n\r\n  const handleUserChange = (e) => {\r\n    const { name, value } = e.target\r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  const handleUserStatusChange = (e) => {\r\n    const { name, value } = e.target\r\n    setUser({ ...user, status: { ...user.status, [name]: { value, mod: checkSatusModification(value) } } })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.background}>\r\n      <Grid style={{ paddingTop: '50px' }} container spacing={2}>\r\n        <Grid item lg={7} sm={6}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Personagem\r\n          </Button>\r\n          <Paper className={classes.paper} variant=\"outlined\">\r\n            <TextField variant=\"outlined\" className={classes.formField} type=\"text\" value={user.name} onChange={handleUserChange} name=\"name\" label=\"Nome\" />\r\n            <TextField variant=\"outlined\" className={classes.formField} type=\"text\" value={user.player} onChange={handleUserChange} name=\"player\" label=\"Jogador\" />\r\n            <br />\r\n            <TextField variant=\"outlined\" className={classes.formField} type=\"text\" value={user.race} onChange={handleUserChange} name=\"race\" label=\"Raça\" />\r\n            <TextField variant=\"outlined\" className={classes.formField} type=\"text\" value={user.origin} onChange={handleUserChange} name=\"origin\" label=\"Origem\" />\r\n            <TextField variant=\"outlined\" className={classes.formField} type=\"text\" value={user.class} onChange={handleUserChange} name=\"class\" label=\"Classe\" />\r\n            <TextField variant=\"outlined\" className={classes.formField} type=\"number\" value={user.lvl} onChange={handleUserChange} name=\"lvl\" label=\"Nível\" />\r\n          </Paper>\r\n          <br />\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Atributos\r\n          </Button>\r\n          <Paper className={classes.paper} variant=\"outlined\">\r\n            <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.status.str.value} onChange={handleUserStatusChange} name=\"str\" label=\"FOR\" />\r\n            <Typography variant=\"h6\" style={{ paddingTop: '18px', display: 'inline-flex', color: user.status.str.mod > 0 ? 'blue' : 'red' }}>\r\n              {user.status.str.mod}\r\n            </Typography>\r\n            <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.status.fin.value} onChange={handleUserStatusChange} name=\"fin\" label=\"DES\" />\r\n            <Typography variant=\"h6\" style={{ paddingTop: '18px', display: 'inline-flex', color: user.status.fin.mod > 0 ? 'blue' : 'red' }}>\r\n              {user.status.fin.mod}\r\n            </Typography>\r\n            <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.status.con.value} onChange={handleUserStatusChange} name=\"con\" label=\"CON\" />\r\n            <Typography variant=\"h6\" style={{ paddingTop: '18px', display: 'inline-flex', color: user.status.con.mod > 0 ? 'blue' : 'red' }}>\r\n              {user.status.con.mod}\r\n            </Typography>\r\n            <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.status.int.value} onChange={handleUserStatusChange} name=\"int\" label=\"INT\" />\r\n            <Typography variant=\"h6\" style={{ paddingTop: '18px', display: 'inline-flex', color: user.status.int.mod > 0 ? 'blue' : 'red' }}>\r\n              {user.status.int.mod}\r\n            </Typography>\r\n            <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.status.wis.value} onChange={handleUserStatusChange} name=\"wis\" label=\"SAB\" />\r\n            <Typography variant=\"h6\" style={{ paddingTop: '18px', display: 'inline-flex', color: user.status.wis.mod > 0 ? 'blue' : 'red' }}>\r\n              {user.status.wis.mod}\r\n            </Typography>\r\n            <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.status.cha.value} onChange={handleUserStatusChange} name=\"cha\" label=\"CAR\" />\r\n            <Typography variant=\"h6\" style={{ paddingTop: '18px', display: 'inline-flex', color: user.status.cha.mod > 0 ? 'blue' : 'red' }}>\r\n              {user.status.cha.mod}\r\n            </Typography>\r\n          </Paper>\r\n          <br />\r\n          <Grid container spacing={2}>\r\n            <Grid item sm={6}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Pontos de vida\r\n              </Button>\r\n              <Paper className={classes.paper} variant=\"outlined\">\r\n                <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.hp} onChange={handleUserChange} name=\"hp\" label=\"Pontos de vida\" />\r\n                <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.hpMax} onChange={handleUserChange} name=\"hpMax\" label=\"Vida máxima\" />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Pontos de mana\r\n              </Button>\r\n              <Paper className={classes.paper} variant=\"outlined\">\r\n                <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.mp} onChange={handleUserChange} name=\"mp\" label=\"Mana\" />\r\n                <TextField variant=\"outlined\" className={classes.formFieldSmall} type=\"number\" value={user.mpMax} onChange={handleUserChange} name=\"mpMax\" label=\"Mana máxima\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Armas\r\n          </Button>\r\n          <Paper className={classes.paper} variant=\"outlined\">\r\n            {\r\n              <List>\r\n                {weapons.map((el, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText\r\n                      primary={el.name + ' - ' + el.type}\r\n                      secondary={\r\n                        <span>\r\n                          <b>Dano:</b> {el.damage}\r\n                          <br />\r\n                          <b>Bônus:</b> {el.bonuses}\r\n                          <br />\r\n                          <b>Crítico:</b> {el.crit}\r\n                          <br />\r\n                          <b>Alcance:</b> {el.range}\r\n                        </span>\r\n                      }\r\n                    ></ListItemText>\r\n\r\n                    <ListItemSecondaryAction>\r\n                      <Button\r\n                        onClick={() => {\r\n                          setWeapons(weapons.filter((e, ind) => ind !== index))\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Remover\r\n                      </Button>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            }\r\n            <TextField\r\n              variant=\"outlined\"\r\n              style={{ padding: '8px' }}\r\n              type=\"text\"\r\n              value={weapon.name}\r\n              onChange={(e) => {\r\n                setWeapon({ ...weapon, name: e.target.value })\r\n              }}\r\n              label=\"Arma\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              style={{ padding: '8px' }}\r\n              value={weapon.damage}\r\n              onChange={(e) => {\r\n                setWeapon({ ...weapon, damage: e.target.value })\r\n              }}\r\n              label=\"Dano\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              style={{ padding: '8px' }}\r\n              value={weapon.crit}\r\n              onChange={(e) => {\r\n                setWeapon({ ...weapon, crit: e.target.value })\r\n              }}\r\n              label=\"Crítico\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              style={{ padding: '8px' }}\r\n              label=\"Bônus de dano\"\r\n              value={weapon.bonuses}\r\n              onChange={(e) => {\r\n                setWeapon({ ...weapon, bonuses: e.target.value })\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              style={{ padding: '8px' }}\r\n              type=\"text\"\r\n              value={weapon.type}\r\n              onChange={(e) => {\r\n                setWeapon({ ...weapon, type: e.target.value })\r\n              }}\r\n              label=\"Tipo\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              style={{ padding: '8px' }}\r\n              value={weapon.range}\r\n              onChange={(e) => {\r\n                setWeapon({ ...weapon, range: e.target.value })\r\n              }}\r\n              label=\"Alcance\"\r\n            />\r\n            <br />\r\n            <Button\r\n              className={classes.formField}\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                setWeapons([...weapons, weapon])\r\n                setWeapon({ name: '', range: '', type: '', damage: 0, bonuses: 0 })\r\n              }}\r\n            >\r\n              Adicionar\r\n            </Button>\r\n            <br />\r\n          </Paper>\r\n          <br />\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Classe de Armadura\r\n              </Button>\r\n              <Paper className={classes.paper} variant=\"outlined\">\r\n                <Typography variant=\"h6\" style={{ paddingTop: '18px', display: 'inline-flex' }} className={classes.formField}>\r\n                  <b style={{ color: 'brown' }}>{10 + user.status.fin.mod + Number(user.armorOther) + Number(user.armorBonuses) + Number(user.shieldBonuses)}</b> = {10} + {user.status.fin.mod} +{' '}\r\n                  {user.armorBonuses} +{user.shieldBonuses} +\r\n                </Typography>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.formField}\r\n                  type=\"number\"\r\n                  value={user.armorOther}\r\n                  onChange={handleUserChange}\r\n                  name=\"armorOther\"\r\n                  label=\"Outros\"\r\n                  style={{ width: '100px' }}\r\n                />\r\n              </Paper>\r\n              <br />\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Escudo e armadura\r\n              </Button>\r\n              <Paper className={classes.paper} variant=\"outlined\">\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.formField}\r\n                  type=\"text\"\r\n                  style={{ marginRight: '0px' }}\r\n                  value={user.armor.name}\r\n                  onChange={(e) => {\r\n                    setUser({ ...user, armor: { ...user.armor, name: e.target.value } })\r\n                  }}\r\n                  name=\"name\"\r\n                  label=\"Armadura\"\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  style={{ width: '80px' }}\r\n                  className={classes.formField}\r\n                  type=\"Number\"\r\n                  value={user.armorBonuses}\r\n                  onChange={handleUserChange}\r\n                  name=\"armorBonuses\"\r\n                  label=\"Bônus\"\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.formField}\r\n                  type=\"Number\"\r\n                  style={{ width: '80px' }}\r\n                  value={user.armor.pen}\r\n                  onChange={(e) => {\r\n                    setUser({ ...user, armor: { ...user.armor, pen: e.target.value } })\r\n                  }}\r\n                  name=\"name\"\r\n                  label=\"Penalidade\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.formField}\r\n                  type=\"text\"\r\n                  style={{ marginRight: '0px' }}\r\n                  value={user.shield.name}\r\n                  onChange={(e) => {\r\n                    setUser({ ...user, shield: { ...user.shield, name: e.target.value } })\r\n                  }}\r\n                  name=\"name\"\r\n                  label=\"Escudo\"\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  style={{ width: '80px' }}\r\n                  className={classes.formField}\r\n                  type=\"Number\"\r\n                  value={user.shieldBonuses}\r\n                  onChange={handleUserChange}\r\n                  name=\"shieldBonuses\"\r\n                  label=\"Bônus\"\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.formField}\r\n                  type=\"Number\"\r\n                  style={{ width: '80px' }}\r\n                  value={user.shield.pen}\r\n                  onChange={(e) => {\r\n                    setUser({ ...user, shield: { ...user.shield, pen: e.target.value } })\r\n                  }}\r\n                  name=\"name\"\r\n                  label=\"Penalidade\"\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Talentos e habilidades\r\n          </Button>\r\n          <Paper className={classes.paper} variant=\"outlined\">\r\n            {\r\n              <List>\r\n                {talents.map((el, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText primary={el}></ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <Button\r\n                        onClick={() => {\r\n                          setTalents(talents.filter((e, ind) => ind !== index))\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Remover\r\n                      </Button>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            }\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              style={{ padding: '8px' }}\r\n              type=\"text\"\r\n              value={talent}\r\n              onChange={(e) => {\r\n                setTalent(e.target.value)\r\n              }}\r\n              label=\"Descreva seu talento ou habilidade:\"\r\n            />\r\n            <br />\r\n            <Button\r\n              className={classes.formField}\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                setTalents([...talents, talent])\r\n                setTalent('')\r\n              }}\r\n            >\r\n              Adicionar\r\n            </Button>\r\n            <br />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item lg={5} sm={6}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Perícias\r\n          </Button>\r\n          <Paper className={classes.paper}>\r\n            <List style={{ maxHeight: '820px', overflowY: 'auto' }}>\r\n              {expertises.map((el, index) => (\r\n                <ListItem key={index}>\r\n                  <Checkbox\r\n                    checked={el.hasIt}\r\n                    color=\"primary\"\r\n                    onClick={(e) => {\r\n                      let newExpertises = [...expertises]\r\n                      newExpertises[index].hasIt = !newExpertises[index].hasIt\r\n                      setExpertises(newExpertises)\r\n                    }}\r\n                  />\r\n                  <ListItemText\r\n                    primary={el.name + ':'}\r\n                    style={{ width: '30%' }}\r\n                    secondary={\r\n                      <Typography variant=\"h6\" color=\"primary\">\r\n                        {el.other + el.training + user.status[el.status].mod + Math.floor(Number(user.lvl) / 2)}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    style={{ marginLeft: '8px', width: '100px' }}\r\n                    type=\"number\"\r\n                    value={el.training}\r\n                    onChange={(e) => {\r\n                      let newExpertises = [...expertises]\r\n                      newExpertises[index].training = Number(e.target.value)\r\n                      setExpertises(newExpertises)\r\n                    }}\r\n                    label=\"Treino\"\r\n                  />\r\n                  <TextField\r\n                    style={{ width: '100px' }}\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={el.other}\r\n                    onChange={(e) => {\r\n                      let newExpertises = [...expertises]\r\n                      newExpertises[index].other = Number(e.target.value)\r\n                      setExpertises(newExpertises)\r\n                    }}\r\n                    label=\"Outro\"\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n          <br />\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Equipamentos\r\n          </Button>\r\n          <Paper className={classes.paper} variant=\"outlined\">\r\n            {\r\n              <List>\r\n                {bag.map((el, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText primary={el.name}></ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <Button\r\n                        onClick={() => {\r\n                          setBag(bag.filter((e, ind) => ind !== index))\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Remover\r\n                      </Button>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            }\r\n            <TextField\r\n              variant=\"outlined\"\r\n              className={classes.formField}\r\n              type=\"text\"\r\n              value={equip.name}\r\n              onChange={(e) => {\r\n                setEquip({ ...equip, name: e.target.value })\r\n              }}\r\n              name=\"equip\"\r\n              label=\"Descreva o equipamento\"\r\n            />\r\n            <br />\r\n            <Button\r\n              className={classes.formField}\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                setBag([...bag, equip])\r\n                setEquip({ name: '' })\r\n              }}\r\n            >\r\n              Adicionar\r\n            </Button>\r\n            <br />\r\n            <Grid container justify=\"flex-end\">\r\n              <TextField variant=\"outlined\" className={classes.formField} style={{ width: '150px' }} type=\"Number\" value={user.gold} onChange={handleUserChange} name=\"gold\" label=\"T$\" />\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Outras características\r\n      </Button>\r\n      <Paper className={classes.paper} variant=\"outlined\">\r\n        <TextField\r\n          variant=\"outlined\"\r\n          style={{ padding: '8px' }}\r\n          fullWidth\r\n          type=\"text\"\r\n          multiline\r\n          rows={4}\r\n          value={user.anotherFeatures}\r\n          onChange={handleUserChange}\r\n          name=\"anotherFeatures\"\r\n          placeholder=\"Me conte sua história\"\r\n        />\r\n      </Paper>\r\n      <br />\r\n      <Button\r\n        style={{ position: 'fixed', top: 0, right: 0 }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          localStorage.setItem('user', JSON.stringify(user))\r\n          localStorage.setItem('weapons', JSON.stringify(weapons))\r\n          localStorage.setItem('bag', JSON.stringify(bag))\r\n          localStorage.setItem('expertises', JSON.stringify(expertises))\r\n          localStorage.setItem('talents', JSON.stringify(talents))\r\n        }}\r\n      >\r\n        Salvar\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { memo } from 'react'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport Root from './components/Root'\nimport { Container, CssBaseline } from '@material-ui/core'\nimport bg from './bg.jpg'\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Verdana\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#9d5124',\n    },\n  },\n})\n\nexport default memo(function App(props) {\n  return (\n    <div\n      style={{\n        minHeight: '100vh',\n        backgroundImage: `url(${bg})`,\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'left',\n        height: '100%',\n      }}\n    >\n      <MuiThemeProvider theme={theme}>\n        <Container maxWidth={'lg'}>\n          <CssBaseline />\n          <Root />\n        </Container>\n      </MuiThemeProvider>\n    </div>\n  )\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}